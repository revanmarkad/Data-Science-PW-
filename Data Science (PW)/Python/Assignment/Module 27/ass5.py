# Q 5 What function is used in Flask for url Building? Write a Python code to demonstrate the working of the url_for function.



# In Flask, the `url_for` function is used for URL building. It generates URLs for your views based on the name of the view function. This is particularly useful for creating URLs that are dynamically updated if your routes change.

 
from flask import Flask, url_for, render_template_string

app = Flask(__name__)

@app.route('/')
def home():
    return 'Welcome to the Home Page!'

@app.route('/about')
def about():
    return 'This is the About Page!'

@app.route('/profile/<username>')
def profile(username):
    return f'Profile page of {username}'

@app.route('/links')
def links():
    home_url = url_for('home')
    about_url = url_for('about')
    profile_url = url_for('profile', username='john_doe')
    
    return render_template_string('''
        <ul>
            <li><a href="{{ home_url }}">Home</a></li>
            <li><a href="{{ about_url }}">About</a></li>
            <li><a href="{{ profile_url }}">Profile</a></li>
        </ul>
    ''', home_url=home_url, about_url=about_url, profile_url=profile_url)

if __name__ == '__main__':
    app.run(debug=True)
 

# ### Explanation:

# - **`url_for('home')`** generates the URL for the `home` view.
# - **`url_for('about')`** generates the URL for the `about` view.
# - **`url_for('profile', username='john_doe')`** generates the URL for the `profile` view, passing the `username` argument.

# When you run this application and visit `/links`, you'll see a list of links with the correct URLs generated by `url_for`. This way, you don't have to hard-code URLs and can avoid broken links if you change the route names.